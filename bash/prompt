#!/bin/bash

# YELLOW=$(tput setaf 3)
# LIGHTRED=$(tput setaf 9)
# ORANGE=$(tput setaf 172)
# PURPLE=$(tput setaf 141)
# WHITE=$(tput setaf 256)
# BOLD=$(tput bold)
# RESET=$(tput sgr0)

BOLD="\[\033[1m\]"
RESET="\[\033[m\]"

BLACK="\[\033[30m\]"
BLUE="\[\033[34m\]"
BROWN="\[\033[33m\]"
CYAN="\[\033[36m\]"
GREEN="\[\033[32m\]"
PURPLE="\[\033[35m\]"
RED="\[\033[31m\]"
WHITE="\[\033[37m\]"
YELLOW="\[\033[33m\]"

ORANGE="\[\033[91m\]"

PROMPT_SYMBOL="❯"
GIT_DIRTY_SYMBOL="✗"

function git_info() {
  # check if we're in a git repo
  git rev-parse --is-inside-work-tree &>/dev/null || return
  # quickest check for what branch we're on
  branch=$(git symbolic-ref -q HEAD | sed -e 's|^refs/heads/||')
  # check if it's dirty (via github.com/sindresorhus/pure)
  dirty=$(git diff --quiet --ignore-submodules HEAD &>/dev/null; [ $? -eq 1 ] && echo -e $GIT_DIRTY_SYMBOL)

  echo $GREEN$branch$YELLOW $dirty
}

function usernamehost() {
  if [ "$SSH_TTY" ]; then
    echo "${PURPLE}$USER@$HOSTNAME${RESET}:";
  fi
}

function prompt_cmd() {
  PS1="$BLUE\w "
  PS1+=$(git_info)
  PS1+="$RESET $PROMPT_SYMBOL "
}

PROMPT_COMMAND=prompt_cmd
